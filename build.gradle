plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	maven { url "https://maven.tomalbrc.de" }
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://kneelawk.com/maven' }
	maven { url "https://maven.alexiil.uk/" }
	maven { url "https://api.modrinth.com/maven/" }
	maven { url = "https://jitpack.io" }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url = 'https://maven.ladysnake.org/releases' }
	maven { url "https://maven.tomalbrc.de" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("com.daniel99j:lib99j:1.0.0")

	modImplementation include("me.lucko:fabric-permissions-api:0.3.3")

	modImplementation include ("eu.pb4:polymer-core:${polymer_version}")
	modImplementation include ("eu.pb4:polymer-blocks:${polymer_version}")
	modImplementation include ("eu.pb4:polymer-resource-pack:${polymer_version}")
	modImplementation include ("eu.pb4:polymer-resource-pack-extras:${polymer_version}")
	modImplementation include ("eu.pb4:polymer-autohost:${polymer_version}")
	modImplementation include ("eu.pb4:polymer-virtual-entity:${polymer_version}")
	modImplementation include('eu.pb4:map-canvas-api:0.5.0+1.21.3')
	modImplementation include('eu.pb4:sidebar-api:0.5.1+1.21.1')
	modImplementation include('eu.pb4:sgui:1.9.0+1.21.5')
	modImplementation include('eu.pb4:factorytools:0.6.0+1.21.5')
	modImplementation include("eu.pb4:common-protection-api:1.0.0")

	modImplementation include("maven.modrinth:patched:7.4.0+1.21.1-fabric")

	modImplementation include("me.shedaniel.cloth:cloth-config-fabric:18.0.145")

	modImplementation include("com.terraformersmc:modmenu:14.0.0-rc.2")

	modImplementation include("org.ladysnake.cardinal-components-api:cardinal-components-base:${cardinal_components_version}")
	modImplementation include("org.ladysnake.cardinal-components-api:cardinal-components-world:${cardinal_components_version}")
	modImplementation include("org.ladysnake.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}")

	modImplementation include("de.tomalbrc:blockbench-import-library:1.3.2+1.21.5")

	modCompileOnly("maven.modrinth:danse:2.1.1+1.21.5")

	modImplementation include('com.kneelawk.graphlib:graphlib-core-fabric:2.0.3-beta.1+1.21.5')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}